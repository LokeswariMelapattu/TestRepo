/*
//------------------------------------------------------------------------------
// Author - Diyar United Company
// Dated  - 21 July 2014
// Project- CMS Customer Service
//------------------------------------------------------------------------------
*/
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014-07-22 - 07:52:20
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------

using System.Collections.Generic;
using DUC.CMS.CustomerService.BLL.Dtos;
using DUC.CMS.CustomerService.DAL;

namespace DUC.CMS.CustomerService.BLL.Mappers
{

    /// <summary>
    /// Assembler for <see cref="NATIONALITY"/> and <see cref="NationalityDTO"/>.
    /// </summary>
    public static partial class NationalityMapper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="NationalityDTO"/> converted from <see cref="NATIONALITY"/>.</param>
        static partial void OnDTO(this NATIONALITY entity, NationalityDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="NATIONALITY"/> converted from <see cref="NationalityDTO"/>.</param>
        static partial void OnEntity(this NationalityDTO dto, NATIONALITY entity);

        /// <summary>
        /// Converts this instance of <see cref="NationalityDTO"/> to an instance of <see cref="NATIONALITY"/>.
        /// </summary>
        /// <param name="dto"><see cref="NationalityDTO"/> to convert.</param>
        public static NATIONALITY ToEntity(this NationalityDTO dto)
        {
            if (dto == null) return null;

            var entity = new NATIONALITY();

            entity.NATIONALITY_ID = dto.NATIONALITY_ID;
            entity.EN_NAME = dto.EN_NAME;
            entity.IS_ACTIVE = dto.IS_ACTIVE;
            entity.AR_NAME = dto.AR_NAME;
            entity.LAST_UPDATED_USER_ID = dto.LastUpdatedUserId;
            entity.LAST_UPDATED_DATE = dto.LastUpdatedDate;
            entity.LAST_LOCATION_ID = dto.LastUpdatedLocationID;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="NATIONALITY"/> to an instance of <see cref="NationalityDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="NATIONALITY"/> to convert.</param>
        public static NationalityDTO ToDTO(this NATIONALITY entity)
        {
            if (entity == null) return null;

            var dto = new NationalityDTO();

            dto.NATIONALITY_ID = entity.NATIONALITY_ID;
            dto.EN_NAME = entity.EN_NAME;
            dto.IS_ACTIVE = entity.IS_ACTIVE;
            dto.AR_NAME = entity.AR_NAME;
            dto.LastUpdatedDate = entity.LAST_UPDATED_DATE;
            dto.LastUpdatedLocationID =(int?) entity.LAST_LOCATION_ID;
            dto.LastUpdatedUserId = (int?)entity.LAST_UPDATED_USER_ID;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="NationalityDTO"/> to an instance of <see cref="NATIONALITY"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<NATIONALITY> ToEntities(this IEnumerable<NationalityDTO> dtos)
        {
            return LinqExtension.ToEntity<NATIONALITY, NationalityDTO>(dtos, ToEntity);
        }

        /// <summary>
        /// Converts each instance of <see cref="NATIONALITY"/> to an instance of <see cref="NationalityDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<NationalityDTO> ToDTOs(this IEnumerable<NATIONALITY> entities)
        {
            return LinqExtension.ToDTO<NATIONALITY, NationalityDTO>(entities, ToDTO);
        }

    }
}
