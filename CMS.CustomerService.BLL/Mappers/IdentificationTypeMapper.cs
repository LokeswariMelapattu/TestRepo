/*
//------------------------------------------------------------------------------
// Author - Diyar United Company
// Dated  - 21 July 2014
// Project- CMS Customer Service
//------------------------------------------------------------------------------
*/
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014-07-21 - 17:40:46
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using DUC.CMS.CustomerService.BLL.Dtos;
using DUC.CMS.CustomerService.DAL;

namespace DUC.CMS.CustomerService.BLL.Mappers
{

    /// <summary>
    /// Assembler for <see cref="IDENTIFICATION_TYPE"/> and <see cref="IdentificationTypeDTO"/>.
    /// </summary>
    public static partial class IdentificationTypeMapper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="IdentificationTypeDTO"/> converted from <see cref="IDENTIFICATION_TYPE"/>.</param>
        static partial void OnDTO(this IDENTIFICATION_TYPE entity, IdentificationTypeDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="IDENTIFICATION_TYPE"/> converted from <see cref="IdentificationTypeDTO"/>.</param>
        static partial void OnEntity(this IdentificationTypeDTO dto, IDENTIFICATION_TYPE entity);

        /// <summary>
        /// Converts this instance of <see cref="IdentificationTypeDTO"/> to an instance of <see cref="IDENTIFICATION_TYPE"/>.
        /// </summary>
        /// <param name="dto"><see cref="IdentificationTypeDTO"/> to convert.</param>
        public static IDENTIFICATION_TYPE ToEntity(this IdentificationTypeDTO dto)
        {
            if (dto == null) return null;

            var entity = new IDENTIFICATION_TYPE();

            entity.IDENTIFICATION_TYPE_ID = dto.IdentificationTypeId;
            entity.EN_NAME = dto.ENName;
            entity.IS_ACTIVE =Convert.ToInt16(dto.IsActive);
            entity.AR_NAME = dto.ARName;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="IDENTIFICATION_TYPE"/> to an instance of <see cref="IdentificationTypeDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="IDENTIFICATION_TYPE"/> to convert.</param>
        public static IdentificationTypeDTO ToDTO(this IDENTIFICATION_TYPE entity)
        {
            if (entity == null) return null;

            var dto = new IdentificationTypeDTO();

            dto.IdentificationTypeId = entity.IDENTIFICATION_TYPE_ID;
            dto.ENName = entity.EN_NAME;
            dto.IsActive = Convert.ToBoolean(entity.IS_ACTIVE);
            dto.ARName = entity.AR_NAME;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="IdentificationTypeDTO"/> to an instance of <see cref="IDENTIFICATION_TYPE"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<IDENTIFICATION_TYPE> ToEntities(this IEnumerable<IdentificationTypeDTO> dtos)
        {
            return LinqExtension.ToEntity<IDENTIFICATION_TYPE, IdentificationTypeDTO>(dtos, ToEntity);
        }

        /// <summary>
        /// Converts each instance of <see cref="IDENTIFICATION_TYPE"/> to an instance of <see cref="IdentificationTypeDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<IdentificationTypeDTO> ToDTOs(this IEnumerable<IDENTIFICATION_TYPE> entities)
        {
            return LinqExtension.ToDTO<IDENTIFICATION_TYPE, IdentificationTypeDTO>(entities, ToDTO);
        }

    }
}
