/*
//------------------------------------------------------------------------------
// Author - Diyar United Company
// Dated  - 21 July 2014
// Project- CMS Customer Service
//------------------------------------------------------------------------------
*/
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014-07-21 - 07:20:39
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------

using System.Collections.Generic;
using DUC.CMS.CustomerService.BLL.Dtos;
using DUC.CMS.CustomerService.DAL;

namespace DUC.CMS.CustomerService.BLL.Mappers
{

    /// <summary>
    /// Assembler for <see cref="CUSTOMER_BALANCE"/> and <see cref="CustomerBalanceDTO"/>.
    /// </summary>
    public static partial class CustomerBalanceMapper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="CustomerBalanceDTO"/> converted from <see cref="CUSTOMER_BALANCE"/>.</param>
        static partial void OnDTO(this CUSTOMER_BALANCE entity, CustomerBalanceDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="CUSTOMER_BALANCE"/> converted from <see cref="CustomerBalanceDTO"/>.</param>
        static partial void OnEntity(this CustomerBalanceDTO dto, CUSTOMER_BALANCE entity);

        /// <summary>
        /// Converts this instance of <see cref="CustomerBalanceDTO"/> to an instance of <see cref="CUSTOMER_BALANCE"/>.
        /// </summary>
        /// <param name="dto"><see cref="CustomerBalanceDTO"/> to convert.</param>
        public static CUSTOMER_BALANCE ToEntity(this CustomerBalanceDTO dto)
        {
            if (dto == null) return null;

            var entity = new CUSTOMER_BALANCE();

            entity.CUSTOMER_ID = dto.CustomerID;
            entity.BALANCE = dto.TotalBalance;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="CUSTOMER_BALANCE"/> to an instance of <see cref="CustomerBalanceDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="CUSTOMER_BALANCE"/> to convert.</param>
        public static CustomerBalanceDTO ToDTO(this CUSTOMER_BALANCE entity)
        {
            if (entity == null) return null;

            var dto = new CustomerBalanceDTO();

            dto.CustomerID = entity.CUSTOMER_ID;
            dto.TotalBalance = entity.BALANCE;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="CustomerBalanceDTO"/> to an instance of <see cref="CUSTOMER_BALANCE"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<CUSTOMER_BALANCE> ToEntities(this IEnumerable<CustomerBalanceDTO> dtos)
        {
            return LinqExtension.ToEntity<CUSTOMER_BALANCE, CustomerBalanceDTO>(dtos, ToEntity);
        }

        /// <summary>
        /// Converts each instance of <see cref="CUSTOMER_BALANCE"/> to an instance of <see cref="CustomerBalanceDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<CustomerBalanceDTO> ToDTOs(this IEnumerable<CUSTOMER_BALANCE> entities)
        {
            return LinqExtension.ToDTO<CUSTOMER_BALANCE, CustomerBalanceDTO>(entities, ToDTO);
        }

    }
}
