/*
//------------------------------------------------------------------------------
// Author - Diyar United Company
// Dated  - 21 July 2014
// Project- CMS Customer Service
//------------------------------------------------------------------------------
*/
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014-07-22 - 07:52:21
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------

using System.Collections.Generic;
using DUC.CMS.CustomerService.BLL.Dtos;
using DUC.CMS.CustomerService.DAL;

namespace DUC.CMS.CustomerService.BLL.Mappers
{

    /// <summary>
    /// Assembler for <see cref="NOTIFICATION_LANGUAGE"/> and <see cref="NotificationLanguageDTO"/>.
    /// </summary>
    public static partial class NotificationLanguageMapper
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="NotificationLanguageDTO"/> converted from <see cref="NOTIFICATION_LANGUAGE"/>.</param>
        static partial void OnDTO(this NOTIFICATION_LANGUAGE entity, NotificationLanguageDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="NOTIFICATION_LANGUAGE"/> converted from <see cref="NotificationLanguageDTO"/>.</param>
        static partial void OnEntity(this NotificationLanguageDTO dto, NOTIFICATION_LANGUAGE entity);

        /// <summary>
        /// Converts this instance of <see cref="NotificationLanguageDTO"/> to an instance of <see cref="NOTIFICATION_LANGUAGE"/>.
        /// </summary>
        /// <param name="dto"><see cref="NotificationLanguageDTO"/> to convert.</param>
        public static NOTIFICATION_LANGUAGE ToEntity(this NotificationLanguageDTO dto)
        {
            if (dto == null) return null;

            var entity = new NOTIFICATION_LANGUAGE();

            entity.NOTIFICATION_LANGUAGE_ID = dto.NOTIFICATION_LANGUAGE_ID;
            entity.EN_NAME = dto.EN_NAME;
            entity.IS_ACTIVE = dto.IS_ACTIVE;
            entity.AR_NAME = dto.AR_NAME;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="NOTIFICATION_LANGUAGE"/> to an instance of <see cref="NotificationLanguageDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="NOTIFICATION_LANGUAGE"/> to convert.</param>
        public static NotificationLanguageDTO ToDTO(this NOTIFICATION_LANGUAGE entity)
        {
            if (entity == null) return null;

            var dto = new NotificationLanguageDTO();

            dto.NOTIFICATION_LANGUAGE_ID = entity.NOTIFICATION_LANGUAGE_ID;
            dto.EN_NAME = entity.EN_NAME;
            dto.IS_ACTIVE = entity.IS_ACTIVE;
            dto.AR_NAME = entity.AR_NAME;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="NotificationLanguageDTO"/> to an instance of <see cref="NOTIFICATION_LANGUAGE"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<NOTIFICATION_LANGUAGE> ToEntities(this IEnumerable<NotificationLanguageDTO> dtos)
        {
            return LinqExtension.ToEntity<NOTIFICATION_LANGUAGE, NotificationLanguageDTO>(dtos, ToEntity);
        }

        /// <summary>
        /// Converts each instance of <see cref="NOTIFICATION_LANGUAGE"/> to an instance of <see cref="NotificationLanguageDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<NotificationLanguageDTO> ToDTOs(this IEnumerable<NOTIFICATION_LANGUAGE> entities)
        {
            return LinqExtension.ToDTO<NOTIFICATION_LANGUAGE, NotificationLanguageDTO>(entities, ToDTO);
        }

    }
}
