//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DUC.CMS.CustomerService.BLL.NotificationsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class LanguageDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArName {
            get {
                return this.ArNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArNameField, value) != true)) {
                    this.ArNameField = value;
                    this.RaisePropertyChanged("ArName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnName {
            get {
                return this.EnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnNameField, value) != true)) {
                    this.EnNameField = value;
                    this.RaisePropertyChanged("EnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailNotificationSearchArgumentsDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class EmailNotificationSearchArgumentsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailRecepientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromDateReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> IsSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToDateReceivedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateProcessed {
            get {
                return this.DateProcessedField;
            }
            set {
                if ((this.DateProcessedField.Equals(value) != true)) {
                    this.DateProcessedField = value;
                    this.RaisePropertyChanged("DateProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailBody {
            get {
                return this.EmailBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailBodyField, value) != true)) {
                    this.EmailBodyField = value;
                    this.RaisePropertyChanged("EmailBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailRecepients {
            get {
                return this.EmailRecepientsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailRecepientsField, value) != true)) {
                    this.EmailRecepientsField = value;
                    this.RaisePropertyChanged("EmailRecepients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailSubject {
            get {
                return this.EmailSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailSubjectField, value) != true)) {
                    this.EmailSubjectField = value;
                    this.RaisePropertyChanged("EmailSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromDateReceived {
            get {
                return this.FromDateReceivedField;
            }
            set {
                if ((this.FromDateReceivedField.Equals(value) != true)) {
                    this.FromDateReceivedField = value;
                    this.RaisePropertyChanged("FromDateReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> IsSent {
            get {
                return this.IsSentField;
            }
            set {
                if ((this.IsSentField.Equals(value) != true)) {
                    this.IsSentField = value;
                    this.RaisePropertyChanged("IsSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NotificationId {
            get {
                return this.NotificationIdField;
            }
            set {
                if ((this.NotificationIdField.Equals(value) != true)) {
                    this.NotificationIdField = value;
                    this.RaisePropertyChanged("NotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationSource {
            get {
                return this.NotificationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSourceField, value) != true)) {
                    this.NotificationSourceField = value;
                    this.RaisePropertyChanged("NotificationSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToDateReceived {
            get {
                return this.ToDateReceivedField;
            }
            set {
                if ((this.ToDateReceivedField.Equals(value) != true)) {
                    this.ToDateReceivedField = value;
                    this.RaisePropertyChanged("ToDateReceived");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailNotificationVDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class EmailNotificationVDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmailNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailRecepientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledLifeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> IsSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationSourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateProcessed {
            get {
                return this.DateProcessedField;
            }
            set {
                if ((this.DateProcessedField.Equals(value) != true)) {
                    this.DateProcessedField = value;
                    this.RaisePropertyChanged("DateProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReceived {
            get {
                return this.DateReceivedField;
            }
            set {
                if ((this.DateReceivedField.Equals(value) != true)) {
                    this.DateReceivedField = value;
                    this.RaisePropertyChanged("DateReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailBody {
            get {
                return this.EmailBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailBodyField, value) != true)) {
                    this.EmailBodyField = value;
                    this.RaisePropertyChanged("EmailBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailNotificationId {
            get {
                return this.EmailNotificationIdField;
            }
            set {
                if ((this.EmailNotificationIdField.Equals(value) != true)) {
                    this.EmailNotificationIdField = value;
                    this.RaisePropertyChanged("EmailNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailRecepients {
            get {
                return this.EmailRecepientsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailRecepientsField, value) != true)) {
                    this.EmailRecepientsField = value;
                    this.RaisePropertyChanged("EmailRecepients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailStatus {
            get {
                return this.EmailStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailStatusField, value) != true)) {
                    this.EmailStatusField = value;
                    this.RaisePropertyChanged("EmailStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailSubject {
            get {
                return this.EmailSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailSubjectField, value) != true)) {
                    this.EmailSubjectField = value;
                    this.RaisePropertyChanged("EmailSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnabledLifeTime {
            get {
                return this.EnabledLifeTimeField;
            }
            set {
                if ((this.EnabledLifeTimeField.Equals(value) != true)) {
                    this.EnabledLifeTimeField = value;
                    this.RaisePropertyChanged("EnabledLifeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> IsSent {
            get {
                return this.IsSentField;
            }
            set {
                if ((this.IsSentField.Equals(value) != true)) {
                    this.IsSentField = value;
                    this.RaisePropertyChanged("IsSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageDesc {
            get {
                return this.LanguageDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageDescField, value) != true)) {
                    this.LanguageDescField = value;
                    this.RaisePropertyChanged("LanguageDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationSource {
            get {
                return this.NotificationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSourceField, value) != true)) {
                    this.NotificationSourceField = value;
                    this.RaisePropertyChanged("NotificationSource");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailNotificationDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class EmailNotificationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmailNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailRecepientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> EnabledLifeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> IsSentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LanguageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationSourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateProcessed {
            get {
                return this.DateProcessedField;
            }
            set {
                if ((this.DateProcessedField.Equals(value) != true)) {
                    this.DateProcessedField = value;
                    this.RaisePropertyChanged("DateProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateReceived {
            get {
                return this.DateReceivedField;
            }
            set {
                if ((this.DateReceivedField.Equals(value) != true)) {
                    this.DateReceivedField = value;
                    this.RaisePropertyChanged("DateReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailBody {
            get {
                return this.EmailBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailBodyField, value) != true)) {
                    this.EmailBodyField = value;
                    this.RaisePropertyChanged("EmailBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailNotificationId {
            get {
                return this.EmailNotificationIdField;
            }
            set {
                if ((this.EmailNotificationIdField.Equals(value) != true)) {
                    this.EmailNotificationIdField = value;
                    this.RaisePropertyChanged("EmailNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailRecepients {
            get {
                return this.EmailRecepientsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailRecepientsField, value) != true)) {
                    this.EmailRecepientsField = value;
                    this.RaisePropertyChanged("EmailRecepients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailSubject {
            get {
                return this.EmailSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailSubjectField, value) != true)) {
                    this.EmailSubjectField = value;
                    this.RaisePropertyChanged("EmailSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> EnabledLifeTime {
            get {
                return this.EnabledLifeTimeField;
            }
            set {
                if ((this.EnabledLifeTimeField.Equals(value) != true)) {
                    this.EnabledLifeTimeField = value;
                    this.RaisePropertyChanged("EnabledLifeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> IsSent {
            get {
                return this.IsSentField;
            }
            set {
                if ((this.IsSentField.Equals(value) != true)) {
                    this.IsSentField = value;
                    this.RaisePropertyChanged("IsSent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LanguageId {
            get {
                return this.LanguageIdField;
            }
            set {
                if ((this.LanguageIdField.Equals(value) != true)) {
                    this.LanguageIdField = value;
                    this.RaisePropertyChanged("LanguageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationSource {
            get {
                return this.NotificationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSourceField, value) != true)) {
                    this.NotificationSourceField = value;
                    this.RaisePropertyChanged("NotificationSource");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsNotificationSearchArgumentsDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class SmsNotificationSearchArgumentsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GateWaySmsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GatewaySMSProcessingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GatewaySMSProcessingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatewaySMSProcessingStatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SMSDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SmsDateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SmsDateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsFailureReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SmsNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SmsProcessingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsProcessingStatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsRecepientField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateProcessed {
            get {
                return this.DateProcessedField;
            }
            set {
                if ((this.DateProcessedField.Equals(value) != true)) {
                    this.DateProcessedField = value;
                    this.RaisePropertyChanged("DateProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GateWaySmsId {
            get {
                return this.GateWaySmsIdField;
            }
            set {
                if ((this.GateWaySmsIdField.Equals(value) != true)) {
                    this.GateWaySmsIdField = value;
                    this.RaisePropertyChanged("GateWaySmsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GatewaySMSProcessingDate {
            get {
                return this.GatewaySMSProcessingDateField;
            }
            set {
                if ((this.GatewaySMSProcessingDateField.Equals(value) != true)) {
                    this.GatewaySMSProcessingDateField = value;
                    this.RaisePropertyChanged("GatewaySMSProcessingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GatewaySMSProcessingStatus {
            get {
                return this.GatewaySMSProcessingStatusField;
            }
            set {
                if ((this.GatewaySMSProcessingStatusField.Equals(value) != true)) {
                    this.GatewaySMSProcessingStatusField = value;
                    this.RaisePropertyChanged("GatewaySMSProcessingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GatewaySMSProcessingStatusDescription {
            get {
                return this.GatewaySMSProcessingStatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GatewaySMSProcessingStatusDescriptionField, value) != true)) {
                    this.GatewaySMSProcessingStatusDescriptionField = value;
                    this.RaisePropertyChanged("GatewaySMSProcessingStatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationSource {
            get {
                return this.NotificationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSourceField, value) != true)) {
                    this.NotificationSourceField = value;
                    this.RaisePropertyChanged("NotificationSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SMSDate {
            get {
                return this.SMSDateField;
            }
            set {
                if ((this.SMSDateField.Equals(value) != true)) {
                    this.SMSDateField = value;
                    this.RaisePropertyChanged("SMSDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsBody {
            get {
                return this.SmsBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsBodyField, value) != true)) {
                    this.SmsBodyField = value;
                    this.RaisePropertyChanged("SmsBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SmsDateFrom {
            get {
                return this.SmsDateFromField;
            }
            set {
                if ((this.SmsDateFromField.Equals(value) != true)) {
                    this.SmsDateFromField = value;
                    this.RaisePropertyChanged("SmsDateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SmsDateTo {
            get {
                return this.SmsDateToField;
            }
            set {
                if ((this.SmsDateToField.Equals(value) != true)) {
                    this.SmsDateToField = value;
                    this.RaisePropertyChanged("SmsDateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsFailureReasonDescription {
            get {
                return this.SmsFailureReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsFailureReasonDescriptionField, value) != true)) {
                    this.SmsFailureReasonDescriptionField = value;
                    this.RaisePropertyChanged("SmsFailureReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SmsNotificationId {
            get {
                return this.SmsNotificationIdField;
            }
            set {
                if ((this.SmsNotificationIdField.Equals(value) != true)) {
                    this.SmsNotificationIdField = value;
                    this.RaisePropertyChanged("SmsNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SmsProcessingStatus {
            get {
                return this.SmsProcessingStatusField;
            }
            set {
                if ((this.SmsProcessingStatusField.Equals(value) != true)) {
                    this.SmsProcessingStatusField = value;
                    this.RaisePropertyChanged("SmsProcessingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsProcessingStatusDescription {
            get {
                return this.SmsProcessingStatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsProcessingStatusDescriptionField, value) != true)) {
                    this.SmsProcessingStatusDescriptionField = value;
                    this.RaisePropertyChanged("SmsProcessingStatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsRecepient {
            get {
                return this.SmsRecepientField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsRecepientField, value) != true)) {
                    this.SmsRecepientField = value;
                    this.RaisePropertyChanged("SmsRecepient");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsNotificationVdto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class SmsNotificationVdto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GateWayProcessingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GateWaySmsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GatewaysmsprocessingdescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GatewaysmsprocessingstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SmsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SmsFailureReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsFailureReasonDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmsNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsRecepientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SmsprocessingstatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateProcessed {
            get {
                return this.DateProcessedField;
            }
            set {
                if ((this.DateProcessedField.Equals(value) != true)) {
                    this.DateProcessedField = value;
                    this.RaisePropertyChanged("DateProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GateWayProcessingDate {
            get {
                return this.GateWayProcessingDateField;
            }
            set {
                if ((this.GateWayProcessingDateField.Equals(value) != true)) {
                    this.GateWayProcessingDateField = value;
                    this.RaisePropertyChanged("GateWayProcessingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GateWaySmsId {
            get {
                return this.GateWaySmsIdField;
            }
            set {
                if ((this.GateWaySmsIdField.Equals(value) != true)) {
                    this.GateWaySmsIdField = value;
                    this.RaisePropertyChanged("GateWaySmsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gatewaysmsprocessingdesc {
            get {
                return this.GatewaysmsprocessingdescField;
            }
            set {
                if ((object.ReferenceEquals(this.GatewaysmsprocessingdescField, value) != true)) {
                    this.GatewaysmsprocessingdescField = value;
                    this.RaisePropertyChanged("Gatewaysmsprocessingdesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Gatewaysmsprocessingstatus {
            get {
                return this.GatewaysmsprocessingstatusField;
            }
            set {
                if ((this.GatewaysmsprocessingstatusField.Equals(value) != true)) {
                    this.GatewaysmsprocessingstatusField = value;
                    this.RaisePropertyChanged("Gatewaysmsprocessingstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationSource {
            get {
                return this.NotificationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSourceField, value) != true)) {
                    this.NotificationSourceField = value;
                    this.RaisePropertyChanged("NotificationSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsBody {
            get {
                return this.SmsBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsBodyField, value) != true)) {
                    this.SmsBodyField = value;
                    this.RaisePropertyChanged("SmsBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SmsDate {
            get {
                return this.SmsDateField;
            }
            set {
                if ((this.SmsDateField.Equals(value) != true)) {
                    this.SmsDateField = value;
                    this.RaisePropertyChanged("SmsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SmsFailureReason {
            get {
                return this.SmsFailureReasonField;
            }
            set {
                if ((this.SmsFailureReasonField.Equals(value) != true)) {
                    this.SmsFailureReasonField = value;
                    this.RaisePropertyChanged("SmsFailureReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsFailureReasonDescription {
            get {
                return this.SmsFailureReasonDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsFailureReasonDescriptionField, value) != true)) {
                    this.SmsFailureReasonDescriptionField = value;
                    this.RaisePropertyChanged("SmsFailureReasonDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmsNotificationId {
            get {
                return this.SmsNotificationIdField;
            }
            set {
                if ((this.SmsNotificationIdField.Equals(value) != true)) {
                    this.SmsNotificationIdField = value;
                    this.RaisePropertyChanged("SmsNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsRecepient {
            get {
                return this.SmsRecepientField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsRecepientField, value) != true)) {
                    this.SmsRecepientField = value;
                    this.RaisePropertyChanged("SmsRecepient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Smsprocessingstatus {
            get {
                return this.SmsprocessingstatusField;
            }
            set {
                if ((this.SmsprocessingstatusField.Equals(value) != true)) {
                    this.SmsprocessingstatusField = value;
                    this.RaisePropertyChanged("Smsprocessingstatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsNotificationDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class SmsNotificationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GateWaySmsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GateWaySmsProcessingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GateWaySmsProcessingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SmsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SmsFailureReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmsNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SmsProcessingStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsRecepientField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateProcessed {
            get {
                return this.DateProcessedField;
            }
            set {
                if ((this.DateProcessedField.Equals(value) != true)) {
                    this.DateProcessedField = value;
                    this.RaisePropertyChanged("DateProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GateWaySmsId {
            get {
                return this.GateWaySmsIdField;
            }
            set {
                if ((this.GateWaySmsIdField.Equals(value) != true)) {
                    this.GateWaySmsIdField = value;
                    this.RaisePropertyChanged("GateWaySmsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GateWaySmsProcessingDate {
            get {
                return this.GateWaySmsProcessingDateField;
            }
            set {
                if ((this.GateWaySmsProcessingDateField.Equals(value) != true)) {
                    this.GateWaySmsProcessingDateField = value;
                    this.RaisePropertyChanged("GateWaySmsProcessingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GateWaySmsProcessingStatus {
            get {
                return this.GateWaySmsProcessingStatusField;
            }
            set {
                if ((this.GateWaySmsProcessingStatusField.Equals(value) != true)) {
                    this.GateWaySmsProcessingStatusField = value;
                    this.RaisePropertyChanged("GateWaySmsProcessingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationSource {
            get {
                return this.NotificationSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationSourceField, value) != true)) {
                    this.NotificationSourceField = value;
                    this.RaisePropertyChanged("NotificationSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsBody {
            get {
                return this.SmsBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsBodyField, value) != true)) {
                    this.SmsBodyField = value;
                    this.RaisePropertyChanged("SmsBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SmsDate {
            get {
                return this.SmsDateField;
            }
            set {
                if ((this.SmsDateField.Equals(value) != true)) {
                    this.SmsDateField = value;
                    this.RaisePropertyChanged("SmsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SmsFailureReason {
            get {
                return this.SmsFailureReasonField;
            }
            set {
                if ((this.SmsFailureReasonField.Equals(value) != true)) {
                    this.SmsFailureReasonField = value;
                    this.RaisePropertyChanged("SmsFailureReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmsNotificationId {
            get {
                return this.SmsNotificationIdField;
            }
            set {
                if ((this.SmsNotificationIdField.Equals(value) != true)) {
                    this.SmsNotificationIdField = value;
                    this.RaisePropertyChanged("SmsNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SmsProcessingStatus {
            get {
                return this.SmsProcessingStatusField;
            }
            set {
                if ((this.SmsProcessingStatusField.Equals(value) != true)) {
                    this.SmsProcessingStatusField = value;
                    this.RaisePropertyChanged("SmsProcessingStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsRecepient {
            get {
                return this.SmsRecepientField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsRecepientField, value) != true)) {
                    this.SmsRecepientField = value;
                    this.RaisePropertyChanged("SmsRecepient");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsStatusDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class SmsStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsStatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmsStatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsStatusDescription {
            get {
                return this.SmsStatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsStatusDescriptionField, value) != true)) {
                    this.SmsStatusDescriptionField = value;
                    this.RaisePropertyChanged("SmsStatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmsStatusId {
            get {
                return this.SmsStatusIdField;
            }
            set {
                if ((this.SmsStatusIdField.Equals(value) != true)) {
                    this.SmsStatusIdField = value;
                    this.RaisePropertyChanged("SmsStatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsActualStatusDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class SmsActualStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsActualStatusDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmsActualStatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsActualStatusDescription {
            get {
                return this.SmsActualStatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsActualStatusDescriptionField, value) != true)) {
                    this.SmsActualStatusDescriptionField = value;
                    this.RaisePropertyChanged("SmsActualStatusDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmsActualStatusId {
            get {
                return this.SmsActualStatusIdField;
            }
            set {
                if ((this.SmsActualStatusIdField.Equals(value) != true)) {
                    this.SmsActualStatusIdField = value;
                    this.RaisePropertyChanged("SmsActualStatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationMessageVdto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class NotificationMessageVdto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArMessageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArMessageSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MessageGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageGroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTypeDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArMessageBody {
            get {
                return this.ArMessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.ArMessageBodyField, value) != true)) {
                    this.ArMessageBodyField = value;
                    this.RaisePropertyChanged("ArMessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArMessageSubject {
            get {
                return this.ArMessageSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ArMessageSubjectField, value) != true)) {
                    this.ArMessageSubjectField = value;
                    this.RaisePropertyChanged("ArMessageSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageCode {
            get {
                return this.MessageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageCodeField, value) != true)) {
                    this.MessageCodeField = value;
                    this.RaisePropertyChanged("MessageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageDescription {
            get {
                return this.MessageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageDescriptionField, value) != true)) {
                    this.MessageDescriptionField = value;
                    this.RaisePropertyChanged("MessageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MessageGroup {
            get {
                return this.MessageGroupField;
            }
            set {
                if ((this.MessageGroupField.Equals(value) != true)) {
                    this.MessageGroupField = value;
                    this.RaisePropertyChanged("MessageGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageGroupDescription {
            get {
                return this.MessageGroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageGroupDescriptionField, value) != true)) {
                    this.MessageGroupDescriptionField = value;
                    this.RaisePropertyChanged("MessageGroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageNotificationId {
            get {
                return this.MessageNotificationIdField;
            }
            set {
                if ((this.MessageNotificationIdField.Equals(value) != true)) {
                    this.MessageNotificationIdField = value;
                    this.RaisePropertyChanged("MessageNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageSubject {
            get {
                return this.MessageSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageSubjectField, value) != true)) {
                    this.MessageSubjectField = value;
                    this.RaisePropertyChanged("MessageSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTypeDescription {
            get {
                return this.MessageTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTypeDescriptionField, value) != true)) {
                    this.MessageTypeDescriptionField = value;
                    this.RaisePropertyChanged("MessageTypeDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationMessageDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class NotificationMessageDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArMessageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArMessageSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> MessageGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageNotificationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageSubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MessageTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArMessageBody {
            get {
                return this.ArMessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.ArMessageBodyField, value) != true)) {
                    this.ArMessageBodyField = value;
                    this.RaisePropertyChanged("ArMessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArMessageSubject {
            get {
                return this.ArMessageSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ArMessageSubjectField, value) != true)) {
                    this.ArMessageSubjectField = value;
                    this.RaisePropertyChanged("ArMessageSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageBody {
            get {
                return this.MessageBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageBodyField, value) != true)) {
                    this.MessageBodyField = value;
                    this.RaisePropertyChanged("MessageBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageCode {
            get {
                return this.MessageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageCodeField, value) != true)) {
                    this.MessageCodeField = value;
                    this.RaisePropertyChanged("MessageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageDescription {
            get {
                return this.MessageDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageDescriptionField, value) != true)) {
                    this.MessageDescriptionField = value;
                    this.RaisePropertyChanged("MessageDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> MessageGroup {
            get {
                return this.MessageGroupField;
            }
            set {
                if ((this.MessageGroupField.Equals(value) != true)) {
                    this.MessageGroupField = value;
                    this.RaisePropertyChanged("MessageGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageNotificationId {
            get {
                return this.MessageNotificationIdField;
            }
            set {
                if ((this.MessageNotificationIdField.Equals(value) != true)) {
                    this.MessageNotificationIdField = value;
                    this.RaisePropertyChanged("MessageNotificationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageSubject {
            get {
                return this.MessageSubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageSubjectField, value) != true)) {
                    this.MessageSubjectField = value;
                    this.RaisePropertyChanged("MessageSubject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageGroupDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class MessageGroupDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageGroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MessageGroupIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageGroupDescription {
            get {
                return this.MessageGroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageGroupDescriptionField, value) != true)) {
                    this.MessageGroupDescriptionField = value;
                    this.RaisePropertyChanged("MessageGroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MessageGroupId {
            get {
                return this.MessageGroupIdField;
            }
            set {
                if ((this.MessageGroupIdField.Equals(value) != true)) {
                    this.MessageGroupIdField = value;
                    this.RaisePropertyChanged("MessageGroupId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageTypeDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class MessageTypeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MessageTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTypeDescription {
            get {
                return this.MessageTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTypeDescriptionField, value) != true)) {
                    this.MessageTypeDescriptionField = value;
                    this.RaisePropertyChanged("MessageTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MessageTypeId {
            get {
                return this.MessageTypeIdField;
            }
            set {
                if ((this.MessageTypeIdField.Equals(value) != true)) {
                    this.MessageTypeIdField = value;
                    this.RaisePropertyChanged("MessageTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigurationsNotificationsDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class ConfigurationsNotificationsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigurationItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigurationItem {
            get {
                return this.ConfigurationItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigurationItemField, value) != true)) {
                    this.ConfigurationItemField = value;
                    this.RaisePropertyChanged("ConfigurationItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailStatusDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLogicLayer.DTO")]
    [System.SerializableAttribute()]
    public partial class EmailStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NotificationsService.NotificationsService")]
    public interface NotificationsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllLanguage", ReplyAction="http://tempuri.org/NotificationsService/GetAllLanguageResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.LanguageDto[] GetAllLanguage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllLanguage", ReplyAction="http://tempuri.org/NotificationsService/GetAllLanguageResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.LanguageDto[]> GetAllLanguageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchEmailNotification", ReplyAction="http://tempuri.org/NotificationsService/SearchEmailNotificationResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationVDto[] SearchEmailNotification(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationSearchArgumentsDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchEmailNotification", ReplyAction="http://tempuri.org/NotificationsService/SearchEmailNotificationResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationVDto[]> SearchEmailNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationSearchArgumentsDto obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddEmailNotification", ReplyAction="http://tempuri.org/NotificationsService/AddEmailNotificationResponse")]
        bool AddEmailNotification(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto emailNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddEmailNotification", ReplyAction="http://tempuri.org/NotificationsService/AddEmailNotificationResponse")]
        System.Threading.Tasks.Task<bool> AddEmailNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto emailNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchSmsNotification", ReplyAction="http://tempuri.org/NotificationsService/SearchSmsNotificationResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationVdto[] SearchSmsNotification(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationSearchArgumentsDto smsNotificationSearchArgument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchSmsNotification", ReplyAction="http://tempuri.org/NotificationsService/SearchSmsNotificationResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationVdto[]> SearchSmsNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationSearchArgumentsDto smsNotificationSearchArgument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetUnsentSms", ReplyAction="http://tempuri.org/NotificationsService/GetUnsentSmsResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto[] GetUnsentSms(int smsLifeTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetUnsentSms", ReplyAction="http://tempuri.org/NotificationsService/GetUnsentSmsResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto[]> GetUnsentSmsAsync(int smsLifeTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllUnsentEmails", ReplyAction="http://tempuri.org/NotificationsService/GetAllUnsentEmailsResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto[] GetAllUnsentEmails(int emailLifeTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllUnsentEmails", ReplyAction="http://tempuri.org/NotificationsService/GetAllUnsentEmailsResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto[]> GetAllUnsentEmailsAsync(int emailLifeTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateSmsNotification", ReplyAction="http://tempuri.org/NotificationsService/UpdateSmsNotificationResponse")]
        bool UpdateSmsNotification(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto smsNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateSmsNotification", ReplyAction="http://tempuri.org/NotificationsService/UpdateSmsNotificationResponse")]
        System.Threading.Tasks.Task<bool> UpdateSmsNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto smsNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllEmailNotification", ReplyAction="http://tempuri.org/NotificationsService/GetAllEmailNotificationResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto[] GetAllEmailNotification();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllEmailNotification", ReplyAction="http://tempuri.org/NotificationsService/GetAllEmailNotificationResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto[]> GetAllEmailNotificationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddSmsNotification", ReplyAction="http://tempuri.org/NotificationsService/AddSmsNotificationResponse")]
        bool AddSmsNotification(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto smsNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddSmsNotification", ReplyAction="http://tempuri.org/NotificationsService/AddSmsNotificationResponse")]
        System.Threading.Tasks.Task<bool> AddSmsNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto smsNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllSmsStatus", ReplyAction="http://tempuri.org/NotificationsService/GetAllSmsStatusResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.SmsStatusDto[] GetAllSmsStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllSmsStatus", ReplyAction="http://tempuri.org/NotificationsService/GetAllSmsStatusResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.SmsStatusDto[]> GetAllSmsStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetALLSMSActualStatus", ReplyAction="http://tempuri.org/NotificationsService/GetALLSMSActualStatusResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.SmsActualStatusDto[] GetALLSMSActualStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetALLSMSActualStatus", ReplyAction="http://tempuri.org/NotificationsService/GetALLSMSActualStatusResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.SmsActualStatusDto[]> GetALLSMSActualStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllNotificationMessageFullDetails", ReplyAction="http://tempuri.org/NotificationsService/GetAllNotificationMessageFullDetailsRespo" +
            "nse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageVdto[] GetAllNotificationMessageFullDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllNotificationMessageFullDetails", ReplyAction="http://tempuri.org/NotificationsService/GetAllNotificationMessageFullDetailsRespo" +
            "nse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageVdto[]> GetAllNotificationMessageFullDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetNotificationMessageById", ReplyAction="http://tempuri.org/NotificationsService/GetNotificationMessageByIdResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto GetNotificationMessageById(int notificationMessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetNotificationMessageById", ReplyAction="http://tempuri.org/NotificationsService/GetNotificationMessageByIdResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto> GetNotificationMessageByIdAsync(int notificationMessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddNotificationMessage", ReplyAction="http://tempuri.org/NotificationsService/AddNotificationMessageResponse")]
        bool AddNotificationMessage(DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto notificationMessageDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddNotificationMessage", ReplyAction="http://tempuri.org/NotificationsService/AddNotificationMessageResponse")]
        System.Threading.Tasks.Task<bool> AddNotificationMessageAsync(DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto notificationMessageDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateNotificationMessage", ReplyAction="http://tempuri.org/NotificationsService/UpdateNotificationMessageResponse")]
        bool UpdateNotificationMessage(DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto notificationMessageDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateNotificationMessage", ReplyAction="http://tempuri.org/NotificationsService/UpdateNotificationMessageResponse")]
        System.Threading.Tasks.Task<bool> UpdateNotificationMessageAsync(DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto notificationMessageDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/DeleteNotificationMessage", ReplyAction="http://tempuri.org/NotificationsService/DeleteNotificationMessageResponse")]
        bool DeleteNotificationMessage(int notificationMessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/DeleteNotificationMessage", ReplyAction="http://tempuri.org/NotificationsService/DeleteNotificationMessageResponse")]
        System.Threading.Tasks.Task<bool> DeleteNotificationMessageAsync(int notificationMessageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchNotificationMessage", ReplyAction="http://tempuri.org/NotificationsService/SearchNotificationMessageResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageVdto[] SearchNotificationMessage(string pMessageCode, string pMessageTypeDescription, string pMessageGroupDescription, string pMessageDescription, string pMessageBody, string pArMessageBody, string pMessageSubject, string pArMessageSubject, System.Nullable<int> pMessageType, System.Nullable<int> pMessageGroup, int pAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchNotificationMessage", ReplyAction="http://tempuri.org/NotificationsService/SearchNotificationMessageResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageVdto[]> SearchNotificationMessageAsync(string pMessageCode, string pMessageTypeDescription, string pMessageGroupDescription, string pMessageDescription, string pMessageBody, string pArMessageBody, string pMessageSubject, string pArMessageSubject, System.Nullable<int> pMessageType, System.Nullable<int> pMessageGroup, int pAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/GetAllMessageGroupResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto[] GetAllMessageGroup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/GetAllMessageGroupResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto[]> GetAllMessageGroupAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetMessageGroupById", ReplyAction="http://tempuri.org/NotificationsService/GetMessageGroupByIdResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto GetMessageGroupById(int messageGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetMessageGroupById", ReplyAction="http://tempuri.org/NotificationsService/GetMessageGroupByIdResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto> GetMessageGroupByIdAsync(int messageGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/AddMessageGroupResponse")]
        bool AddMessageGroup(DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto messageGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/AddMessageGroupResponse")]
        System.Threading.Tasks.Task<bool> AddMessageGroupAsync(DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto messageGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/UpdateMessageGroupResponse")]
        bool UpdateMessageGroup(DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto messageGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/UpdateMessageGroupResponse")]
        System.Threading.Tasks.Task<bool> UpdateMessageGroupAsync(DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto messageGroupDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/DeleteMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/DeleteMessageGroupResponse")]
        bool DeleteMessageGroup(int messageGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/DeleteMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/DeleteMessageGroupResponse")]
        System.Threading.Tasks.Task<bool> DeleteMessageGroupAsync(int messageGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/SearchMessageGroupResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto[] SearchMessageGroup(System.Nullable<int> pMessageGroupId, string pMessageGroupDescription, int pAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchMessageGroup", ReplyAction="http://tempuri.org/NotificationsService/SearchMessageGroupResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto[]> SearchMessageGroupAsync(System.Nullable<int> pMessageGroupId, string pMessageGroupDescription, int pAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllMessageType", ReplyAction="http://tempuri.org/NotificationsService/GetAllMessageTypeResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.MessageTypeDto[] GetAllMessageType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllMessageType", ReplyAction="http://tempuri.org/NotificationsService/GetAllMessageTypeResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.MessageTypeDto[]> GetAllMessageTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateEmailNotification", ReplyAction="http://tempuri.org/NotificationsService/UpdateEmailNotificationResponse")]
        bool UpdateEmailNotification(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto emailNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateEmailNotification", ReplyAction="http://tempuri.org/NotificationsService/UpdateEmailNotificationResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmailNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto emailNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllConfigurationsNotifications", ReplyAction="http://tempuri.org/NotificationsService/GetAllConfigurationsNotificationsResponse" +
            "")]
        DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto[] GetAllConfigurationsNotifications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllConfigurationsNotifications", ReplyAction="http://tempuri.org/NotificationsService/GetAllConfigurationsNotificationsResponse" +
            "")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto[]> GetAllConfigurationsNotificationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetConfigurationsNotificationById", ReplyAction="http://tempuri.org/NotificationsService/GetConfigurationsNotificationByIdResponse" +
            "")]
        DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto GetConfigurationsNotificationById(int configurationNotificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetConfigurationsNotificationById", ReplyAction="http://tempuri.org/NotificationsService/GetConfigurationsNotificationByIdResponse" +
            "")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto> GetConfigurationsNotificationByIdAsync(int configurationNotificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddConfigurationNotification", ReplyAction="http://tempuri.org/NotificationsService/AddConfigurationNotificationResponse")]
        bool AddConfigurationNotification(DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto configurationNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/AddConfigurationNotification", ReplyAction="http://tempuri.org/NotificationsService/AddConfigurationNotificationResponse")]
        System.Threading.Tasks.Task<bool> AddConfigurationNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto configurationNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateCofigurationNotification", ReplyAction="http://tempuri.org/NotificationsService/UpdateCofigurationNotificationResponse")]
        bool UpdateCofigurationNotification(DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto configurationNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/UpdateCofigurationNotification", ReplyAction="http://tempuri.org/NotificationsService/UpdateCofigurationNotificationResponse")]
        System.Threading.Tasks.Task<bool> UpdateCofigurationNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto configurationNotificationDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/DeleteCofigurationNotification", ReplyAction="http://tempuri.org/NotificationsService/DeleteCofigurationNotificationResponse")]
        bool DeleteCofigurationNotification(int configurationNotificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/DeleteCofigurationNotification", ReplyAction="http://tempuri.org/NotificationsService/DeleteCofigurationNotificationResponse")]
        System.Threading.Tasks.Task<bool> DeleteCofigurationNotificationAsync(int configurationNotificationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchConfigurationNotification", ReplyAction="http://tempuri.org/NotificationsService/SearchConfigurationNotificationResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto[] SearchConfigurationNotification(System.Nullable<int> pId, string pConfigurationItem, string pValue, string pDescription, int pAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/SearchConfigurationNotification", ReplyAction="http://tempuri.org/NotificationsService/SearchConfigurationNotificationResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto[]> SearchConfigurationNotificationAsync(System.Nullable<int> pId, string pConfigurationItem, string pValue, string pDescription, int pAll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllEmailStatus", ReplyAction="http://tempuri.org/NotificationsService/GetAllEmailStatusResponse")]
        DUC.CMS.CustomerService.BLL.NotificationsService.EmailStatusDto[] GetAllEmailStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotificationsService/GetAllEmailStatus", ReplyAction="http://tempuri.org/NotificationsService/GetAllEmailStatusResponse")]
        System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.EmailStatusDto[]> GetAllEmailStatusAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface NotificationsServiceChannel : DUC.CMS.CustomerService.BLL.NotificationsService.NotificationsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationsServiceClient : System.ServiceModel.ClientBase<DUC.CMS.CustomerService.BLL.NotificationsService.NotificationsService>, DUC.CMS.CustomerService.BLL.NotificationsService.NotificationsService {
        
        public NotificationsServiceClient() {
        }
        
        public NotificationsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NotificationsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NotificationsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.LanguageDto[] GetAllLanguage() {
            return base.Channel.GetAllLanguage();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.LanguageDto[]> GetAllLanguageAsync() {
            return base.Channel.GetAllLanguageAsync();
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationVDto[] SearchEmailNotification(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationSearchArgumentsDto obj) {
            return base.Channel.SearchEmailNotification(obj);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationVDto[]> SearchEmailNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationSearchArgumentsDto obj) {
            return base.Channel.SearchEmailNotificationAsync(obj);
        }
        
        public bool AddEmailNotification(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto emailNotificationDto) {
            return base.Channel.AddEmailNotification(emailNotificationDto);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmailNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto emailNotificationDto) {
            return base.Channel.AddEmailNotificationAsync(emailNotificationDto);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationVdto[] SearchSmsNotification(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationSearchArgumentsDto smsNotificationSearchArgument) {
            return base.Channel.SearchSmsNotification(smsNotificationSearchArgument);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationVdto[]> SearchSmsNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationSearchArgumentsDto smsNotificationSearchArgument) {
            return base.Channel.SearchSmsNotificationAsync(smsNotificationSearchArgument);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto[] GetUnsentSms(int smsLifeTime) {
            return base.Channel.GetUnsentSms(smsLifeTime);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto[]> GetUnsentSmsAsync(int smsLifeTime) {
            return base.Channel.GetUnsentSmsAsync(smsLifeTime);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto[] GetAllUnsentEmails(int emailLifeTime) {
            return base.Channel.GetAllUnsentEmails(emailLifeTime);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto[]> GetAllUnsentEmailsAsync(int emailLifeTime) {
            return base.Channel.GetAllUnsentEmailsAsync(emailLifeTime);
        }
        
        public bool UpdateSmsNotification(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto smsNotificationDto) {
            return base.Channel.UpdateSmsNotification(smsNotificationDto);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSmsNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto smsNotificationDto) {
            return base.Channel.UpdateSmsNotificationAsync(smsNotificationDto);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto[] GetAllEmailNotification() {
            return base.Channel.GetAllEmailNotification();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto[]> GetAllEmailNotificationAsync() {
            return base.Channel.GetAllEmailNotificationAsync();
        }
        
        public bool AddSmsNotification(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto smsNotificationDto) {
            return base.Channel.AddSmsNotification(smsNotificationDto);
        }
        
        public System.Threading.Tasks.Task<bool> AddSmsNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.SmsNotificationDto smsNotificationDto) {
            return base.Channel.AddSmsNotificationAsync(smsNotificationDto);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.SmsStatusDto[] GetAllSmsStatus() {
            return base.Channel.GetAllSmsStatus();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.SmsStatusDto[]> GetAllSmsStatusAsync() {
            return base.Channel.GetAllSmsStatusAsync();
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.SmsActualStatusDto[] GetALLSMSActualStatus() {
            return base.Channel.GetALLSMSActualStatus();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.SmsActualStatusDto[]> GetALLSMSActualStatusAsync() {
            return base.Channel.GetALLSMSActualStatusAsync();
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageVdto[] GetAllNotificationMessageFullDetails() {
            return base.Channel.GetAllNotificationMessageFullDetails();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageVdto[]> GetAllNotificationMessageFullDetailsAsync() {
            return base.Channel.GetAllNotificationMessageFullDetailsAsync();
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto GetNotificationMessageById(int notificationMessageId) {
            return base.Channel.GetNotificationMessageById(notificationMessageId);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto> GetNotificationMessageByIdAsync(int notificationMessageId) {
            return base.Channel.GetNotificationMessageByIdAsync(notificationMessageId);
        }
        
        public bool AddNotificationMessage(DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto notificationMessageDto) {
            return base.Channel.AddNotificationMessage(notificationMessageDto);
        }
        
        public System.Threading.Tasks.Task<bool> AddNotificationMessageAsync(DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto notificationMessageDto) {
            return base.Channel.AddNotificationMessageAsync(notificationMessageDto);
        }
        
        public bool UpdateNotificationMessage(DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto notificationMessageDto) {
            return base.Channel.UpdateNotificationMessage(notificationMessageDto);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateNotificationMessageAsync(DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageDto notificationMessageDto) {
            return base.Channel.UpdateNotificationMessageAsync(notificationMessageDto);
        }
        
        public bool DeleteNotificationMessage(int notificationMessageId) {
            return base.Channel.DeleteNotificationMessage(notificationMessageId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteNotificationMessageAsync(int notificationMessageId) {
            return base.Channel.DeleteNotificationMessageAsync(notificationMessageId);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageVdto[] SearchNotificationMessage(string pMessageCode, string pMessageTypeDescription, string pMessageGroupDescription, string pMessageDescription, string pMessageBody, string pArMessageBody, string pMessageSubject, string pArMessageSubject, System.Nullable<int> pMessageType, System.Nullable<int> pMessageGroup, int pAll) {
            return base.Channel.SearchNotificationMessage(pMessageCode, pMessageTypeDescription, pMessageGroupDescription, pMessageDescription, pMessageBody, pArMessageBody, pMessageSubject, pArMessageSubject, pMessageType, pMessageGroup, pAll);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.NotificationMessageVdto[]> SearchNotificationMessageAsync(string pMessageCode, string pMessageTypeDescription, string pMessageGroupDescription, string pMessageDescription, string pMessageBody, string pArMessageBody, string pMessageSubject, string pArMessageSubject, System.Nullable<int> pMessageType, System.Nullable<int> pMessageGroup, int pAll) {
            return base.Channel.SearchNotificationMessageAsync(pMessageCode, pMessageTypeDescription, pMessageGroupDescription, pMessageDescription, pMessageBody, pArMessageBody, pMessageSubject, pArMessageSubject, pMessageType, pMessageGroup, pAll);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto[] GetAllMessageGroup() {
            return base.Channel.GetAllMessageGroup();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto[]> GetAllMessageGroupAsync() {
            return base.Channel.GetAllMessageGroupAsync();
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto GetMessageGroupById(int messageGroupId) {
            return base.Channel.GetMessageGroupById(messageGroupId);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto> GetMessageGroupByIdAsync(int messageGroupId) {
            return base.Channel.GetMessageGroupByIdAsync(messageGroupId);
        }
        
        public bool AddMessageGroup(DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto messageGroupDto) {
            return base.Channel.AddMessageGroup(messageGroupDto);
        }
        
        public System.Threading.Tasks.Task<bool> AddMessageGroupAsync(DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto messageGroupDto) {
            return base.Channel.AddMessageGroupAsync(messageGroupDto);
        }
        
        public bool UpdateMessageGroup(DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto messageGroupDto) {
            return base.Channel.UpdateMessageGroup(messageGroupDto);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateMessageGroupAsync(DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto messageGroupDto) {
            return base.Channel.UpdateMessageGroupAsync(messageGroupDto);
        }
        
        public bool DeleteMessageGroup(int messageGroupId) {
            return base.Channel.DeleteMessageGroup(messageGroupId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMessageGroupAsync(int messageGroupId) {
            return base.Channel.DeleteMessageGroupAsync(messageGroupId);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto[] SearchMessageGroup(System.Nullable<int> pMessageGroupId, string pMessageGroupDescription, int pAll) {
            return base.Channel.SearchMessageGroup(pMessageGroupId, pMessageGroupDescription, pAll);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.MessageGroupDto[]> SearchMessageGroupAsync(System.Nullable<int> pMessageGroupId, string pMessageGroupDescription, int pAll) {
            return base.Channel.SearchMessageGroupAsync(pMessageGroupId, pMessageGroupDescription, pAll);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.MessageTypeDto[] GetAllMessageType() {
            return base.Channel.GetAllMessageType();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.MessageTypeDto[]> GetAllMessageTypeAsync() {
            return base.Channel.GetAllMessageTypeAsync();
        }
        
        public bool UpdateEmailNotification(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto emailNotificationDto) {
            return base.Channel.UpdateEmailNotification(emailNotificationDto);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmailNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.EmailNotificationDto emailNotificationDto) {
            return base.Channel.UpdateEmailNotificationAsync(emailNotificationDto);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto[] GetAllConfigurationsNotifications() {
            return base.Channel.GetAllConfigurationsNotifications();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto[]> GetAllConfigurationsNotificationsAsync() {
            return base.Channel.GetAllConfigurationsNotificationsAsync();
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto GetConfigurationsNotificationById(int configurationNotificationId) {
            return base.Channel.GetConfigurationsNotificationById(configurationNotificationId);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto> GetConfigurationsNotificationByIdAsync(int configurationNotificationId) {
            return base.Channel.GetConfigurationsNotificationByIdAsync(configurationNotificationId);
        }
        
        public bool AddConfigurationNotification(DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto configurationNotificationDto) {
            return base.Channel.AddConfigurationNotification(configurationNotificationDto);
        }
        
        public System.Threading.Tasks.Task<bool> AddConfigurationNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto configurationNotificationDto) {
            return base.Channel.AddConfigurationNotificationAsync(configurationNotificationDto);
        }
        
        public bool UpdateCofigurationNotification(DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto configurationNotificationDto) {
            return base.Channel.UpdateCofigurationNotification(configurationNotificationDto);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCofigurationNotificationAsync(DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto configurationNotificationDto) {
            return base.Channel.UpdateCofigurationNotificationAsync(configurationNotificationDto);
        }
        
        public bool DeleteCofigurationNotification(int configurationNotificationId) {
            return base.Channel.DeleteCofigurationNotification(configurationNotificationId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCofigurationNotificationAsync(int configurationNotificationId) {
            return base.Channel.DeleteCofigurationNotificationAsync(configurationNotificationId);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto[] SearchConfigurationNotification(System.Nullable<int> pId, string pConfigurationItem, string pValue, string pDescription, int pAll) {
            return base.Channel.SearchConfigurationNotification(pId, pConfigurationItem, pValue, pDescription, pAll);
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.ConfigurationsNotificationsDto[]> SearchConfigurationNotificationAsync(System.Nullable<int> pId, string pConfigurationItem, string pValue, string pDescription, int pAll) {
            return base.Channel.SearchConfigurationNotificationAsync(pId, pConfigurationItem, pValue, pDescription, pAll);
        }
        
        public DUC.CMS.CustomerService.BLL.NotificationsService.EmailStatusDto[] GetAllEmailStatus() {
            return base.Channel.GetAllEmailStatus();
        }
        
        public System.Threading.Tasks.Task<DUC.CMS.CustomerService.BLL.NotificationsService.EmailStatusDto[]> GetAllEmailStatusAsync() {
            return base.Channel.GetAllEmailStatusAsync();
        }
    }
}
